{"env_info": "sys.platform: linux\nPython: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-32GB\nCUDA_HOME: None\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.12.1+cu116\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.13.1+cu116\nOpenCV: 4.7.0\nMMCV: 1.6.2\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.6\nMMDetection: 2.25.3+", "config": "dataset_type = 'CocoDataset'\ndata_root = '../../../dataset/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='AutoAugment',\n        policies=[[{\n            'type':\n            'Resize',\n            'img_scale': [(480, 1333), (512, 1333), (544, 1333), (576, 1333),\n                          (608, 1333), (640, 1333), (672, 1333), (704, 1333),\n                          (736, 1333), (768, 1333), (800, 1333)],\n            'multiscale_mode':\n            'value',\n            'keep_ratio':\n            True\n        }],\n                  [{\n                      'type': 'Resize',\n                      'img_scale': [(400, 4200), (500, 4200), (600, 4200)],\n                      'multiscale_mode': 'value',\n                      'keep_ratio': True\n                  }, {\n                      'type': 'RandomCrop',\n                      'crop_type': 'absolute_range',\n                      'crop_size': (384, 600),\n                      'allow_negative_crop': True\n                  }, {\n                      'type':\n                      'Resize',\n                      'img_scale': [(480, 1333), (512, 1333), (544, 1333),\n                                    (576, 1333), (608, 1333), (640, 1333),\n                                    (672, 1333), (704, 1333), (736, 1333),\n                                    (768, 1333), (800, 1333)],\n                      'multiscale_mode':\n                      'value',\n                      'override':\n                      True,\n                      'keep_ratio':\n                      True\n                  }]]),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=1),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=1),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\nclasses = ('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',\n           'Styrofoam', 'Plastic bag', 'Battery', 'Clothing')\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='../../../dataset/skfold/cv_train_skfold1.json',\n        img_prefix='../../../dataset/',\n        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='AutoAugment',\n                policies=[[{\n                    'type':\n                    'Resize',\n                    'img_scale': [(480, 1333), (512, 1333), (544, 1333),\n                                  (576, 1333), (608, 1333), (640, 1333),\n                                  (672, 1333), (704, 1333), (736, 1333),\n                                  (768, 1333), (800, 1333)],\n                    'multiscale_mode':\n                    'value',\n                    'keep_ratio':\n                    True\n                }],\n                          [{\n                              'type': 'Resize',\n                              'img_scale': [(400, 4200), (500, 4200),\n                                            (600, 4200)],\n                              'multiscale_mode': 'value',\n                              'keep_ratio': True\n                          }, {\n                              'type': 'RandomCrop',\n                              'crop_type': 'absolute_range',\n                              'crop_size': (384, 600),\n                              'allow_negative_crop': True\n                          }, {\n                              'type':\n                              'Resize',\n                              'img_scale': [(480, 1333), (512, 1333),\n                                            (544, 1333), (576, 1333),\n                                            (608, 1333), (640, 1333),\n                                            (672, 1333), (704, 1333),\n                                            (736, 1333), (768, 1333),\n                                            (800, 1333)],\n                              'multiscale_mode':\n                              'value',\n                              'override':\n                              True,\n                              'keep_ratio':\n                              True\n                          }]]),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=1),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        filter_empty_gt=False),\n    val=dict(\n        type='CocoDataset',\n        ann_file='../../../dataset/skfold/cv_val_skfold1.json',\n        img_prefix='../../../dataset/',\n        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=1),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='../../../dataset/test.json',\n        img_prefix='../../../dataset/',\n        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=1),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox', classwise=True)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=32)\nmodel = dict(\n    type='DeformableDETR',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='ChannelMapper',\n        in_channels=[512, 1024, 2048],\n        kernel_size=1,\n        out_channels=256,\n        act_cfg=None,\n        norm_cfg=dict(type='GN', num_groups=32),\n        num_outs=4),\n    bbox_head=dict(\n        type='DeformableDETRHead',\n        num_query=300,\n        num_classes=10,\n        in_channels=2048,\n        sync_cls_avg_factor=True,\n        as_two_stage=False,\n        transformer=dict(\n            type='DeformableDetrTransformer',\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention', embed_dims=256),\n                    feedforward_channels=1024,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm'))),\n            decoder=dict(\n                type='DeformableDetrTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='MultiScaleDeformableAttention',\n                            embed_dims=256)\n                    ],\n                    feedforward_channels=1024,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        positional_encoding=dict(\n            type='SinePositionalEncoding',\n            num_feats=128,\n            normalize=True,\n            offset=-0.5),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=5.0),\n        loss_iou=dict(type='GIoULoss', loss_weight=2.0)),\n    train_cfg=dict(\n        assigner=dict(\n            type='HungarianAssigner',\n            cls_cost=dict(type='FocalLossCost', weight=2.0),\n            reg_cost=dict(type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n            iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0))),\n    test_cfg=dict(max_per_img=100))\noptimizer = dict(\n    type='AdamW',\n    lr=0.0002,\n    weight_decay=0.0001,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            backbone=dict(lr_mult=0.1),\n            sampling_offsets=dict(lr_mult=0.1),\n            reference_points=dict(lr_mult=0.1))))\noptimizer_config = dict(grad_clip=dict(max_norm=0.1, norm_type=2))\nlr_config = dict(policy='step', step=[40])\nrunner = dict(type='EpochBasedRunner', max_epochs=50)\nwork_dir = '../configs/custom/work_dirs/deformable_detr_r50_16X2_50e_coco/'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 1747042295, "exp_name": "deformable_detr_r50_16X2_50e_coco.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0002, "memory": 14412, "data_time": 0.05577, "loss_cls": 1.58536, "loss_bbox": 2.13011, "loss_iou": 1.50265, "d0.loss_cls": 1.43255, "d0.loss_bbox": 2.15724, "d0.loss_iou": 1.51446, "d1.loss_cls": 1.54197, "d1.loss_bbox": 2.14039, "d1.loss_iou": 1.49827, "d2.loss_cls": 1.59017, "d2.loss_bbox": 2.12576, "d2.loss_iou": 1.49399, "d3.loss_cls": 1.57765, "d3.loss_bbox": 2.12338, "d3.loss_iou": 1.50344, "d4.loss_cls": 1.55396, "d4.loss_bbox": 2.13095, "d4.loss_iou": 1.50156, "loss": 31.10385, "grad_norm": 75.5054, "time": 0.62428}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0002, "memory": 14659, "data_time": 0.00955, "loss_cls": 1.45837, "loss_bbox": 1.86108, "loss_iou": 1.36001, "d0.loss_cls": 1.32622, "d0.loss_bbox": 1.73073, "d0.loss_iou": 1.33654, "d1.loss_cls": 1.43681, "d1.loss_bbox": 1.8031, "d1.loss_iou": 1.34561, "d2.loss_cls": 1.45304, "d2.loss_bbox": 1.85844, "d2.loss_iou": 1.36353, "d3.loss_cls": 1.45105, "d3.loss_bbox": 1.86677, "d3.loss_iou": 1.37208, "d4.loss_cls": 1.4543, "d4.loss_bbox": 1.86872, "d4.loss_iou": 1.36624, "loss": 27.71263, "grad_norm": 73.8788, "time": 0.5264}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0002, "memory": 15931, "data_time": 0.0114, "loss_cls": 1.49655, "loss_bbox": 1.69801, "loss_iou": 1.28475, "d0.loss_cls": 1.4647, "d0.loss_bbox": 1.24685, "d0.loss_iou": 1.17171, "d1.loss_cls": 1.52198, "d1.loss_bbox": 1.26191, "d1.loss_iou": 1.17626, "d2.loss_cls": 1.50674, "d2.loss_bbox": 1.4013, "d2.loss_iou": 1.21331, "d3.loss_cls": 1.49586, "d3.loss_bbox": 1.54142, "d3.loss_iou": 1.24042, "d4.loss_cls": 1.49638, "d4.loss_bbox": 1.62465, "d4.loss_iou": 1.25695, "loss": 25.09974, "grad_norm": 86.88197, "time": 0.54409}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.0002, "memory": 15931, "data_time": 0.01086, "loss_cls": 1.47126, "loss_bbox": 1.32962, "loss_iou": 1.19797, "d0.loss_cls": 1.43063, "d0.loss_bbox": 1.20757, "d0.loss_iou": 1.14979, "d1.loss_cls": 1.47968, "d1.loss_bbox": 1.20501, "d1.loss_iou": 1.1457, "d2.loss_cls": 1.49577, "d2.loss_bbox": 1.21594, "d2.loss_iou": 1.1565, "d3.loss_cls": 1.50074, "d3.loss_bbox": 1.2885, "d3.loss_iou": 1.17946, "d4.loss_cls": 1.51036, "d4.loss_bbox": 1.2901, "d4.loss_iou": 1.19038, "loss": 23.44498, "grad_norm": 93.10426, "time": 0.53758}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.0002, "memory": 15931, "data_time": 0.00984, "loss_cls": 1.47526, "loss_bbox": 1.14403, "loss_iou": 1.17229, "d0.loss_cls": 1.40607, "d0.loss_bbox": 1.13172, "d0.loss_iou": 1.16301, "d1.loss_cls": 1.48591, "d1.loss_bbox": 1.11946, "d1.loss_iou": 1.16059, "d2.loss_cls": 1.47699, "d2.loss_bbox": 1.12993, "d2.loss_iou": 1.16577, "d3.loss_cls": 1.44293, "d3.loss_bbox": 1.15669, "d3.loss_iou": 1.17846, "d4.loss_cls": 1.46486, "d4.loss_bbox": 1.12957, "d4.loss_iou": 1.15961, "loss": 22.56315, "grad_norm": 89.13691, "time": 0.51713}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0002, "memory": 15931, "data_time": 0.01, "loss_cls": 1.45182, "loss_bbox": 1.16729, "loss_iou": 1.17205, "d0.loss_cls": 1.44554, "d0.loss_bbox": 1.15455, "d0.loss_iou": 1.16383, "d1.loss_cls": 1.45818, "d1.loss_bbox": 1.13896, "d1.loss_iou": 1.1601, "d2.loss_cls": 1.46949, "d2.loss_bbox": 1.13876, "d2.loss_iou": 1.16206, "d3.loss_cls": 1.47981, "d3.loss_bbox": 1.13361, "d3.loss_iou": 1.16787, "d4.loss_cls": 1.46695, "d4.loss_bbox": 1.13854, "d4.loss_iou": 1.15265, "loss": 22.62207, "grad_norm": 98.72262, "time": 0.52804}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.0002, "memory": 15931, "data_time": 0.01072, "loss_cls": 1.48191, "loss_bbox": 1.18651, "loss_iou": 1.10629, "d0.loss_cls": 1.44364, "d0.loss_bbox": 1.14768, "d0.loss_iou": 1.08691, "d1.loss_cls": 1.47831, "d1.loss_bbox": 1.14019, "d1.loss_iou": 1.08603, "d2.loss_cls": 1.49957, "d2.loss_bbox": 1.15165, "d2.loss_iou": 1.08905, "d3.loss_cls": 1.47755, "d3.loss_bbox": 1.16324, "d3.loss_iou": 1.10494, "d4.loss_cls": 1.46607, "d4.loss_bbox": 1.14988, "d4.loss_iou": 1.1039, "loss": 22.36331, "grad_norm": 90.82376, "time": 0.53011}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.0002, "memory": 15931, "data_time": 0.0106, "loss_cls": 1.45214, "loss_bbox": 1.05644, "loss_iou": 1.14869, "d0.loss_cls": 1.40931, "d0.loss_bbox": 1.03728, "d0.loss_iou": 1.13986, "d1.loss_cls": 1.43726, "d1.loss_bbox": 1.03092, "d1.loss_iou": 1.13924, "d2.loss_cls": 1.45584, "d2.loss_bbox": 1.03378, "d2.loss_iou": 1.13547, "d3.loss_cls": 1.45007, "d3.loss_bbox": 1.01848, "d3.loss_iou": 1.12725, "d4.loss_cls": 1.43874, "d4.loss_bbox": 1.03403, "d4.loss_iou": 1.1392, "loss": 21.68399, "grad_norm": 86.80228, "time": 0.5231}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.0002, "memory": 15931, "data_time": 0.00991, "loss_cls": 1.50628, "loss_bbox": 1.15569, "loss_iou": 1.09983, "d0.loss_cls": 1.44873, "d0.loss_bbox": 1.14836, "d0.loss_iou": 1.10214, "d1.loss_cls": 1.49806, "d1.loss_bbox": 1.14039, "d1.loss_iou": 1.09618, "d2.loss_cls": 1.49674, "d2.loss_bbox": 1.13425, "d2.loss_iou": 1.10075, "d3.loss_cls": 1.48516, "d3.loss_bbox": 1.1725, "d3.loss_iou": 1.10646, "d4.loss_cls": 1.48473, "d4.loss_bbox": 1.17036, "d4.loss_iou": 1.11695, "loss": 22.46355, "grad_norm": 100.25802, "time": 0.53175}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.0002, "memory": 15931, "data_time": 0.01075, "loss_cls": 1.43895, "loss_bbox": 1.07747, "loss_iou": 1.1548, "d0.loss_cls": 1.39925, "d0.loss_bbox": 1.07793, "d0.loss_iou": 1.1579, "d1.loss_cls": 1.42387, "d1.loss_bbox": 1.04794, "d1.loss_iou": 1.15273, "d2.loss_cls": 1.4303, "d2.loss_bbox": 1.05936, "d2.loss_iou": 1.15925, "d3.loss_cls": 1.43358, "d3.loss_bbox": 1.05586, "d3.loss_iou": 1.15265, "d4.loss_cls": 1.43865, "d4.loss_bbox": 1.06806, "d4.loss_iou": 1.15187, "loss": 21.88041, "grad_norm": 85.43224, "time": 0.53142}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.0002, "memory": 15931, "data_time": 0.00993, "loss_cls": 1.45483, "loss_bbox": 1.07353, "loss_iou": 1.19044, "d0.loss_cls": 1.43465, "d0.loss_bbox": 1.0742, "d0.loss_iou": 1.18359, "d1.loss_cls": 1.46041, "d1.loss_bbox": 1.06529, "d1.loss_iou": 1.17175, "d2.loss_cls": 1.46051, "d2.loss_bbox": 1.0583, "d2.loss_iou": 1.16552, "d3.loss_cls": 1.45803, "d3.loss_bbox": 1.05598, "d3.loss_iou": 1.16329, "d4.loss_cls": 1.45186, "d4.loss_bbox": 1.06577, "d4.loss_iou": 1.16678, "loss": 22.15472, "grad_norm": 84.78465, "time": 0.52513}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.0002, "memory": 15931, "data_time": 0.00989, "loss_cls": 1.47154, "loss_bbox": 1.12609, "loss_iou": 1.14522, "d0.loss_cls": 1.43566, "d0.loss_bbox": 1.14691, "d0.loss_iou": 1.15543, "d1.loss_cls": 1.46348, "d1.loss_bbox": 1.13069, "d1.loss_iou": 1.14876, "d2.loss_cls": 1.4526, "d2.loss_bbox": 1.12995, "d2.loss_iou": 1.14642, "d3.loss_cls": 1.4639, "d3.loss_bbox": 1.12384, "d3.loss_iou": 1.14984, "d4.loss_cls": 1.45151, "d4.loss_bbox": 1.13835, "d4.loss_iou": 1.1387, "loss": 22.41887, "grad_norm": 98.75808, "time": 0.52889}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.0002, "memory": 15931, "data_time": 0.01006, "loss_cls": 1.40208, "loss_bbox": 1.07727, "loss_iou": 1.14257, "d0.loss_cls": 1.36417, "d0.loss_bbox": 1.06964, "d0.loss_iou": 1.1145, "d1.loss_cls": 1.37728, "d1.loss_bbox": 1.07706, "d1.loss_iou": 1.13358, "d2.loss_cls": 1.38632, "d2.loss_bbox": 1.09466, "d2.loss_iou": 1.14182, "d3.loss_cls": 1.3903, "d3.loss_bbox": 1.0697, "d3.loss_iou": 1.12965, "d4.loss_cls": 1.38787, "d4.loss_bbox": 1.07739, "d4.loss_iou": 1.13294, "loss": 21.5688, "grad_norm": 85.84448, "time": 0.52024}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.0002, "memory": 15931, "data_time": 0.0102, "loss_cls": 1.43406, "loss_bbox": 1.10535, "loss_iou": 1.12976, "d0.loss_cls": 1.4127, "d0.loss_bbox": 1.09059, "d0.loss_iou": 1.12347, "d1.loss_cls": 1.41892, "d1.loss_bbox": 1.07907, "d1.loss_iou": 1.12805, "d2.loss_cls": 1.43113, "d2.loss_bbox": 1.08584, "d2.loss_iou": 1.12681, "d3.loss_cls": 1.43181, "d3.loss_bbox": 1.08923, "d3.loss_iou": 1.13778, "d4.loss_cls": 1.41873, "d4.loss_bbox": 1.11126, "d4.loss_iou": 1.12645, "loss": 21.881, "grad_norm": 102.3848, "time": 0.52547}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.0002, "memory": 15931, "data_time": 0.01043, "loss_cls": 1.32918, "loss_bbox": 1.09657, "loss_iou": 1.13898, "d0.loss_cls": 1.33567, "d0.loss_bbox": 1.09616, "d0.loss_iou": 1.13483, "d1.loss_cls": 1.32352, "d1.loss_bbox": 1.11823, "d1.loss_iou": 1.14916, "d2.loss_cls": 1.33024, "d2.loss_bbox": 1.13203, "d2.loss_iou": 1.17005, "d3.loss_cls": 1.34801, "d3.loss_bbox": 1.08367, "d3.loss_iou": 1.12803, "d4.loss_cls": 1.32998, "d4.loss_bbox": 1.09749, "d4.loss_iou": 1.13379, "loss": 21.4756, "grad_norm": 88.30555, "time": 0.53996}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.0002, "memory": 15931, "data_time": 0.00981, "loss_cls": 1.37602, "loss_bbox": 1.08066, "loss_iou": 1.10861, "d0.loss_cls": 1.36739, "d0.loss_bbox": 1.06118, "d0.loss_iou": 1.07899, "d1.loss_cls": 1.38842, "d1.loss_bbox": 1.05142, "d1.loss_iou": 1.08486, "d2.loss_cls": 1.38345, "d2.loss_bbox": 1.06552, "d2.loss_iou": 1.10637, "d3.loss_cls": 1.37948, "d3.loss_bbox": 1.09219, "d3.loss_iou": 1.11882, "d4.loss_cls": 1.38563, "d4.loss_bbox": 1.06424, "d4.loss_iou": 1.10429, "loss": 21.29752, "grad_norm": 93.70326, "time": 0.51858}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.0002, "memory": 15931, "data_time": 0.01012, "loss_cls": 1.3014, "loss_bbox": 1.04775, "loss_iou": 1.14478, "d0.loss_cls": 1.3024, "d0.loss_bbox": 1.00629, "d0.loss_iou": 1.11742, "d1.loss_cls": 1.32247, "d1.loss_bbox": 1.00752, "d1.loss_iou": 1.12131, "d2.loss_cls": 1.31978, "d2.loss_bbox": 1.02382, "d2.loss_iou": 1.13511, "d3.loss_cls": 1.31866, "d3.loss_bbox": 1.01539, "d3.loss_iou": 1.12449, "d4.loss_cls": 1.31958, "d4.loss_bbox": 1.02147, "d4.loss_iou": 1.12579, "loss": 20.77543, "grad_norm": 92.19557, "time": 0.53958}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.0002, "memory": 15931, "data_time": 0.01014, "loss_cls": 1.30292, "loss_bbox": 1.05728, "loss_iou": 1.15773, "d0.loss_cls": 1.29798, "d0.loss_bbox": 1.03448, "d0.loss_iou": 1.12734, "d1.loss_cls": 1.29688, "d1.loss_bbox": 1.04043, "d1.loss_iou": 1.14179, "d2.loss_cls": 1.30097, "d2.loss_bbox": 1.05542, "d2.loss_iou": 1.14769, "d3.loss_cls": 1.28842, "d3.loss_bbox": 1.05382, "d3.loss_iou": 1.14433, "d4.loss_cls": 1.29105, "d4.loss_bbox": 1.05632, "d4.loss_iou": 1.15321, "loss": 20.94807, "grad_norm": 85.3893, "time": 0.53477}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.0002, "memory": 16603, "data_time": 0.00984, "loss_cls": 1.31674, "loss_bbox": 1.07113, "loss_iou": 1.11934, "d0.loss_cls": 1.30774, "d0.loss_bbox": 1.07368, "d0.loss_iou": 1.12497, "d1.loss_cls": 1.31127, "d1.loss_bbox": 1.07955, "d1.loss_iou": 1.12607, "d2.loss_cls": 1.31608, "d2.loss_bbox": 1.0817, "d2.loss_iou": 1.12337, "d3.loss_cls": 1.31592, "d3.loss_bbox": 1.08133, "d3.loss_iou": 1.12665, "d4.loss_cls": 1.30228, "d4.loss_bbox": 1.09426, "d4.loss_iou": 1.12723, "loss": 21.0993, "grad_norm": 89.3581, "time": 0.53537}
{"mode": "val", "epoch": 1, "iter": 969, "lr": 0.0002, "bbox_mAP": 0.001, "bbox_mAP_50": 0.005, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.001, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.001 0.005 0.000 0.000 0.001 0.001"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.0002, "memory": 16603, "data_time": 0.05723, "loss_cls": 1.29097, "loss_bbox": 1.05462, "loss_iou": 1.08434, "d0.loss_cls": 1.30223, "d0.loss_bbox": 1.02609, "d0.loss_iou": 1.06994, "d1.loss_cls": 1.2934, "d1.loss_bbox": 1.01368, "d1.loss_iou": 1.07269, "d2.loss_cls": 1.30204, "d2.loss_bbox": 1.02456, "d2.loss_iou": 1.0695, "d3.loss_cls": 1.28668, "d3.loss_bbox": 1.05701, "d3.loss_iou": 1.07959, "d4.loss_cls": 1.29222, "d4.loss_bbox": 1.06303, "d4.loss_iou": 1.09375, "loss": 20.47634, "grad_norm": 97.4352, "time": 0.59194}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.0002, "memory": 16603, "data_time": 0.00988, "loss_cls": 1.27625, "loss_bbox": 1.0352, "loss_iou": 1.12018, "d0.loss_cls": 1.25489, "d0.loss_bbox": 1.02449, "d0.loss_iou": 1.11618, "d1.loss_cls": 1.26941, "d1.loss_bbox": 1.02269, "d1.loss_iou": 1.12711, "d2.loss_cls": 1.27419, "d2.loss_bbox": 1.02816, "d2.loss_iou": 1.14326, "d3.loss_cls": 1.26967, "d3.loss_bbox": 1.02276, "d3.loss_iou": 1.1152, "d4.loss_cls": 1.27662, "d4.loss_bbox": 1.02758, "d4.loss_iou": 1.1128, "loss": 20.51664, "grad_norm": 91.64617, "time": 0.52888}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.0002, "memory": 16603, "data_time": 0.01002, "loss_cls": 1.31021, "loss_bbox": 1.10875, "loss_iou": 1.15385, "d0.loss_cls": 1.30548, "d0.loss_bbox": 1.08073, "d0.loss_iou": 1.13616, "d1.loss_cls": 1.30949, "d1.loss_bbox": 1.09763, "d1.loss_iou": 1.14454, "d2.loss_cls": 1.32034, "d2.loss_bbox": 1.07849, "d2.loss_iou": 1.13431, "d3.loss_cls": 1.29812, "d3.loss_bbox": 1.09086, "d3.loss_iou": 1.13511, "d4.loss_cls": 1.31052, "d4.loss_bbox": 1.0909, "d4.loss_iou": 1.14042, "loss": 21.24591, "grad_norm": 92.49087, "time": 0.54099}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.0002, "memory": 16603, "data_time": 0.01047, "loss_cls": 1.28115, "loss_bbox": 1.08367, "loss_iou": 1.0632, "d0.loss_cls": 1.28353, "d0.loss_bbox": 1.07253, "d0.loss_iou": 1.06642, "d1.loss_cls": 1.29119, "d1.loss_bbox": 1.08164, "d1.loss_iou": 1.0782, "d2.loss_cls": 1.29691, "d2.loss_bbox": 1.07927, "d2.loss_iou": 1.06497, "d3.loss_cls": 1.27847, "d3.loss_bbox": 1.08123, "d3.loss_iou": 1.07001, "d4.loss_cls": 1.27561, "d4.loss_bbox": 1.08582, "d4.loss_iou": 1.06984, "loss": 20.60365, "grad_norm": 100.74049, "time": 0.54029}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.0002, "memory": 16603, "data_time": 0.01036, "loss_cls": 1.30376, "loss_bbox": 1.04826, "loss_iou": 1.05853, "d0.loss_cls": 1.29446, "d0.loss_bbox": 1.04784, "d0.loss_iou": 1.07382, "d1.loss_cls": 1.30813, "d1.loss_bbox": 1.03469, "d1.loss_iou": 1.06574, "d2.loss_cls": 1.29773, "d2.loss_bbox": 1.04539, "d2.loss_iou": 1.06212, "d3.loss_cls": 1.29495, "d3.loss_bbox": 1.04273, "d3.loss_iou": 1.06593, "d4.loss_cls": 1.29519, "d4.loss_bbox": 1.0492, "d4.loss_iou": 1.07795, "loss": 20.46638, "grad_norm": 102.70899, "time": 0.52212}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.0002, "memory": 16603, "data_time": 0.01028, "loss_cls": 1.28021, "loss_bbox": 1.059, "loss_iou": 1.08604, "d0.loss_cls": 1.26644, "d0.loss_bbox": 1.05186, "d0.loss_iou": 1.0749, "d1.loss_cls": 1.26772, "d1.loss_bbox": 1.05549, "d1.loss_iou": 1.07884, "d2.loss_cls": 1.27454, "d2.loss_bbox": 1.05552, "d2.loss_iou": 1.08727, "d3.loss_cls": 1.27191, "d3.loss_bbox": 1.05386, "d3.loss_iou": 1.07084, "d4.loss_cls": 1.28219, "d4.loss_bbox": 1.06755, "d4.loss_iou": 1.08076, "loss": 20.46493, "grad_norm": 98.42171, "time": 0.52961}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.0002, "memory": 16603, "data_time": 0.0099, "loss_cls": 1.24898, "loss_bbox": 1.08155, "loss_iou": 1.16049, "d0.loss_cls": 1.25441, "d0.loss_bbox": 1.05464, "d0.loss_iou": 1.13636, "d1.loss_cls": 1.25268, "d1.loss_bbox": 1.05282, "d1.loss_iou": 1.13128, "d2.loss_cls": 1.25469, "d2.loss_bbox": 1.05738, "d2.loss_iou": 1.13795, "d3.loss_cls": 1.23238, "d3.loss_bbox": 1.07854, "d3.loss_iou": 1.14736, "d4.loss_cls": 1.24798, "d4.loss_bbox": 1.08214, "d4.loss_iou": 1.14221, "loss": 20.75385, "grad_norm": 89.95886, "time": 0.53235}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.0002, "memory": 16603, "data_time": 0.00973, "loss_cls": 1.25613, "loss_bbox": 1.08141, "loss_iou": 1.16624, "d0.loss_cls": 1.24431, "d0.loss_bbox": 1.07234, "d0.loss_iou": 1.15748, "d1.loss_cls": 1.2629, "d1.loss_bbox": 1.0689, "d1.loss_iou": 1.15527, "d2.loss_cls": 1.26647, "d2.loss_bbox": 1.07174, "d2.loss_iou": 1.1589, "d3.loss_cls": 1.26312, "d3.loss_bbox": 1.06599, "d3.loss_iou": 1.14942, "d4.loss_cls": 1.26347, "d4.loss_bbox": 1.07493, "d4.loss_iou": 1.15755, "loss": 20.93658, "grad_norm": 96.54035, "time": 0.51612}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.0002, "memory": 16603, "data_time": 0.01036, "loss_cls": 1.27594, "loss_bbox": 1.10206, "loss_iou": 1.13403, "d0.loss_cls": 1.25663, "d0.loss_bbox": 1.10031, "d0.loss_iou": 1.13699, "d1.loss_cls": 1.25528, "d1.loss_bbox": 1.11865, "d1.loss_iou": 1.16211, "d2.loss_cls": 1.26341, "d2.loss_bbox": 1.11358, "d2.loss_iou": 1.14554, "d3.loss_cls": 1.26968, "d3.loss_bbox": 1.10119, "d3.loss_iou": 1.13477, "d4.loss_cls": 1.26716, "d4.loss_bbox": 1.11353, "d4.loss_iou": 1.13734, "loss": 21.08818, "grad_norm": 98.25432, "time": 0.52237}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.0002, "memory": 16603, "data_time": 0.01032, "loss_cls": 1.19662, "loss_bbox": 0.97683, "loss_iou": 1.12986, "d0.loss_cls": 1.21091, "d0.loss_bbox": 0.95844, "d0.loss_iou": 1.10379, "d1.loss_cls": 1.18913, "d1.loss_bbox": 0.97399, "d1.loss_iou": 1.11959, "d2.loss_cls": 1.19784, "d2.loss_bbox": 0.96324, "d2.loss_iou": 1.1108, "d3.loss_cls": 1.19998, "d3.loss_bbox": 0.95662, "d3.loss_iou": 1.10058, "d4.loss_cls": 1.20493, "d4.loss_bbox": 0.96206, "d4.loss_iou": 1.1019, "loss": 19.6571, "grad_norm": 92.04822, "time": 0.53073}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.0002, "memory": 16603, "data_time": 0.01019, "loss_cls": 1.24884, "loss_bbox": 1.03439, "loss_iou": 1.10028, "d0.loss_cls": 1.26772, "d0.loss_bbox": 1.0397, "d0.loss_iou": 1.10012, "d1.loss_cls": 1.2726, "d1.loss_bbox": 1.02452, "d1.loss_iou": 1.098, "d2.loss_cls": 1.26118, "d2.loss_bbox": 1.0267, "d2.loss_iou": 1.09487, "d3.loss_cls": 1.24243, "d3.loss_bbox": 1.05469, "d3.loss_iou": 1.10792, "d4.loss_cls": 1.24754, "d4.loss_bbox": 1.03691, "d4.loss_iou": 1.10608, "loss": 20.3645, "grad_norm": 95.76545, "time": 0.52339}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.0002, "memory": 16603, "data_time": 0.01029, "loss_cls": 1.22676, "loss_bbox": 1.02889, "loss_iou": 1.0806, "d0.loss_cls": 1.22624, "d0.loss_bbox": 1.02653, "d0.loss_iou": 1.07406, "d1.loss_cls": 1.22567, "d1.loss_bbox": 1.02788, "d1.loss_iou": 1.07867, "d2.loss_cls": 1.22465, "d2.loss_bbox": 1.0456, "d2.loss_iou": 1.08798, "d3.loss_cls": 1.22049, "d3.loss_bbox": 1.04394, "d3.loss_iou": 1.08845, "d4.loss_cls": 1.23229, "d4.loss_bbox": 1.01621, "d4.loss_iou": 1.07506, "loss": 20.02996, "grad_norm": 104.29853, "time": 0.53667}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.0002, "memory": 16603, "data_time": 0.01011, "loss_cls": 1.32562, "loss_bbox": 0.98316, "loss_iou": 1.09367, "d0.loss_cls": 1.31904, "d0.loss_bbox": 0.9907, "d0.loss_iou": 1.09497, "d1.loss_cls": 1.32582, "d1.loss_bbox": 0.98914, "d1.loss_iou": 1.10361, "d2.loss_cls": 1.33191, "d2.loss_bbox": 0.97644, "d2.loss_iou": 1.09718, "d3.loss_cls": 1.3194, "d3.loss_bbox": 0.98613, "d3.loss_iou": 1.09512, "d4.loss_cls": 1.34499, "d4.loss_bbox": 0.96763, "d4.loss_iou": 1.08513, "loss": 20.42968, "grad_norm": 116.78691, "time": 0.52552}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.0002, "memory": 16603, "data_time": 0.00983, "loss_cls": 1.29971, "loss_bbox": 0.97673, "loss_iou": 1.0553, "d0.loss_cls": 1.27873, "d0.loss_bbox": 1.01324, "d0.loss_iou": 1.08941, "d1.loss_cls": 1.29013, "d1.loss_bbox": 1.0006, "d1.loss_iou": 1.07677, "d2.loss_cls": 1.29058, "d2.loss_bbox": 0.99669, "d2.loss_iou": 1.06265, "d3.loss_cls": 1.28726, "d3.loss_bbox": 0.99007, "d3.loss_iou": 1.06401, "d4.loss_cls": 1.28172, "d4.loss_bbox": 0.97918, "d4.loss_iou": 1.0567, "loss": 20.08947, "grad_norm": 108.18151, "time": 0.52405}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.0002, "memory": 16603, "data_time": 0.01022, "loss_cls": 1.32319, "loss_bbox": 0.96615, "loss_iou": 1.08272, "d0.loss_cls": 1.29029, "d0.loss_bbox": 0.95056, "d0.loss_iou": 1.06316, "d1.loss_cls": 1.29423, "d1.loss_bbox": 0.96632, "d1.loss_iou": 1.07104, "d2.loss_cls": 1.2957, "d2.loss_bbox": 0.94997, "d2.loss_iou": 1.07186, "d3.loss_cls": 1.29269, "d3.loss_bbox": 0.94415, "d3.loss_iou": 1.05944, "d4.loss_cls": 1.30155, "d4.loss_bbox": 0.94405, "d4.loss_iou": 1.06191, "loss": 19.92896, "grad_norm": 139.72352, "time": 0.54322}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.0002, "memory": 16603, "data_time": 0.01075, "loss_cls": 1.30569, "loss_bbox": 0.98712, "loss_iou": 1.04077, "d0.loss_cls": 1.30963, "d0.loss_bbox": 0.98577, "d0.loss_iou": 1.04856, "d1.loss_cls": 1.28803, "d1.loss_bbox": 0.96848, "d1.loss_iou": 1.03616, "d2.loss_cls": 1.28433, "d2.loss_bbox": 1.00376, "d2.loss_iou": 1.05508, "d3.loss_cls": 1.28351, "d3.loss_bbox": 1.02609, "d3.loss_iou": 1.06197, "d4.loss_cls": 1.29649, "d4.loss_bbox": 0.98976, "d4.loss_iou": 1.03762, "loss": 20.00882, "grad_norm": 161.539, "time": 0.52586}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.0002, "memory": 16603, "data_time": 0.01054, "loss_cls": 1.27995, "loss_bbox": 0.87942, "loss_iou": 1.05754, "d0.loss_cls": 1.29998, "d0.loss_bbox": 0.88715, "d0.loss_iou": 1.04947, "d1.loss_cls": 1.28758, "d1.loss_bbox": 0.88868, "d1.loss_iou": 1.0665, "d2.loss_cls": 1.28663, "d2.loss_bbox": 0.86425, "d2.loss_iou": 1.0626, "d3.loss_cls": 1.28982, "d3.loss_bbox": 0.87668, "d3.loss_iou": 1.05086, "d4.loss_cls": 1.28948, "d4.loss_bbox": 0.88504, "d4.loss_iou": 1.05502, "loss": 19.35666, "grad_norm": 145.48156, "time": 0.53792}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.0002, "memory": 16603, "data_time": 0.01092, "loss_cls": 1.29918, "loss_bbox": 0.93342, "loss_iou": 1.04788, "d0.loss_cls": 1.30825, "d0.loss_bbox": 0.92809, "d0.loss_iou": 1.06736, "d1.loss_cls": 1.29472, "d1.loss_bbox": 0.92685, "d1.loss_iou": 1.06699, "d2.loss_cls": 1.30045, "d2.loss_bbox": 0.91773, "d2.loss_iou": 1.05309, "d3.loss_cls": 1.29177, "d3.loss_bbox": 0.92041, "d3.loss_iou": 1.03398, "d4.loss_cls": 1.30126, "d4.loss_bbox": 0.93439, "d4.loss_iou": 1.04741, "loss": 19.67323, "grad_norm": 142.10655, "time": 0.54212}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.0002, "memory": 16604, "data_time": 0.0102, "loss_cls": 1.31048, "loss_bbox": 0.94094, "loss_iou": 1.0418, "d0.loss_cls": 1.32588, "d0.loss_bbox": 0.9019, "d0.loss_iou": 1.02719, "d1.loss_cls": 1.30467, "d1.loss_bbox": 0.91489, "d1.loss_iou": 1.04965, "d2.loss_cls": 1.30639, "d2.loss_bbox": 0.92034, "d2.loss_iou": 1.04594, "d3.loss_cls": 1.3039, "d3.loss_bbox": 0.94004, "d3.loss_iou": 1.04049, "d4.loss_cls": 1.30726, "d4.loss_bbox": 0.93415, "d4.loss_iou": 1.04713, "loss": 19.66304, "grad_norm": 170.69033, "time": 0.54261}
{"mode": "val", "epoch": 2, "iter": 969, "lr": 0.0002, "bbox_mAP": 0.001, "bbox_mAP_50": 0.005, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.001 0.005 0.000 0.000 0.000 0.002"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.0002, "memory": 16604, "data_time": 0.05739, "loss_cls": 1.31202, "loss_bbox": 0.95852, "loss_iou": 1.02722, "d0.loss_cls": 1.31215, "d0.loss_bbox": 0.93685, "d0.loss_iou": 1.00993, "d1.loss_cls": 1.32404, "d1.loss_bbox": 0.95628, "d1.loss_iou": 1.03178, "d2.loss_cls": 1.32367, "d2.loss_bbox": 0.96399, "d2.loss_iou": 1.02753, "d3.loss_cls": 1.30201, "d3.loss_bbox": 0.99016, "d3.loss_iou": 1.02909, "d4.loss_cls": 1.30427, "d4.loss_bbox": 0.95531, "d4.loss_iou": 1.01784, "loss": 19.78266, "grad_norm": 194.83737, "time": 0.58467}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.0002, "memory": 16604, "data_time": 0.00955, "loss_cls": 1.29135, "loss_bbox": 0.92397, "loss_iou": 1.02577, "d0.loss_cls": 1.29683, "d0.loss_bbox": 0.90209, "d0.loss_iou": 1.02199, "d1.loss_cls": 1.30788, "d1.loss_bbox": 0.93021, "d1.loss_iou": 1.03005, "d2.loss_cls": 1.3146, "d2.loss_bbox": 0.92159, "d2.loss_iou": 1.02654, "d3.loss_cls": 1.28927, "d3.loss_bbox": 0.96247, "d3.loss_iou": 1.04158, "d4.loss_cls": 1.29116, "d4.loss_bbox": 0.92377, "d4.loss_iou": 1.03484, "loss": 19.53594, "grad_norm": 166.65993, "time": 0.53032}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.0002, "memory": 16604, "data_time": 0.00953, "loss_cls": 1.27372, "loss_bbox": 0.90594, "loss_iou": 1.03856, "d0.loss_cls": 1.2982, "d0.loss_bbox": 0.89469, "d0.loss_iou": 1.00362, "d1.loss_cls": 1.28071, "d1.loss_bbox": 0.89973, "d1.loss_iou": 1.01571, "d2.loss_cls": 1.28826, "d2.loss_bbox": 0.90616, "d2.loss_iou": 1.01519, "d3.loss_cls": 1.2704, "d3.loss_bbox": 0.92099, "d3.loss_iou": 1.02788, "d4.loss_cls": 1.27673, "d4.loss_bbox": 0.90519, "d4.loss_iou": 1.03202, "loss": 19.25371, "grad_norm": 203.38406, "time": 0.53958}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.0002, "memory": 16604, "data_time": 0.01037, "loss_cls": 1.30352, "loss_bbox": 0.86712, "loss_iou": 0.99534, "d0.loss_cls": 1.3082, "d0.loss_bbox": 0.85348, "d0.loss_iou": 0.98661, "d1.loss_cls": 1.30168, "d1.loss_bbox": 0.83572, "d1.loss_iou": 0.98095, "d2.loss_cls": 1.30261, "d2.loss_bbox": 0.84543, "d2.loss_iou": 0.97446, "d3.loss_cls": 1.29704, "d3.loss_bbox": 0.85786, "d3.loss_iou": 0.97959, "d4.loss_cls": 1.29887, "d4.loss_bbox": 0.85399, "d4.loss_iou": 0.99617, "loss": 18.83865, "grad_norm": 174.6742, "time": 0.54186}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.0002, "memory": 16604, "data_time": 0.01014, "loss_cls": 1.25269, "loss_bbox": 0.9132, "loss_iou": 1.09993, "d0.loss_cls": 1.25809, "d0.loss_bbox": 0.9002, "d0.loss_iou": 1.09344, "d1.loss_cls": 1.26846, "d1.loss_bbox": 0.89166, "d1.loss_iou": 1.09392, "d2.loss_cls": 1.2612, "d2.loss_bbox": 0.89752, "d2.loss_iou": 1.10247, "d3.loss_cls": 1.25735, "d3.loss_bbox": 0.90982, "d3.loss_iou": 1.10648, "d4.loss_cls": 1.25902, "d4.loss_bbox": 0.92229, "d4.loss_iou": 1.11131, "loss": 19.59906, "grad_norm": 228.47534, "time": 0.53258}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.0002, "memory": 16604, "data_time": 0.00999, "loss_cls": 1.2808, "loss_bbox": 0.94482, "loss_iou": 1.0782, "d0.loss_cls": 1.28238, "d0.loss_bbox": 0.93022, "d0.loss_iou": 1.06236, "d1.loss_cls": 1.28534, "d1.loss_bbox": 0.93016, "d1.loss_iou": 1.06145, "d2.loss_cls": 1.29574, "d2.loss_bbox": 0.94675, "d2.loss_iou": 1.09044, "d3.loss_cls": 1.27524, "d3.loss_bbox": 0.94845, "d3.loss_iou": 1.07305, "d4.loss_cls": 1.28688, "d4.loss_bbox": 0.95293, "d4.loss_iou": 1.0752, "loss": 19.80042, "grad_norm": 262.16203, "time": 0.53126}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.0002, "memory": 16604, "data_time": 0.00989, "loss_cls": 1.28473, "loss_bbox": 0.90485, "loss_iou": 1.03779, "d0.loss_cls": 1.28961, "d0.loss_bbox": 0.86259, "d0.loss_iou": 1.02284, "d1.loss_cls": 1.28952, "d1.loss_bbox": 0.86022, "d1.loss_iou": 1.01268, "d2.loss_cls": 1.2851, "d2.loss_bbox": 0.87731, "d2.loss_iou": 1.0166, "d3.loss_cls": 1.2721, "d3.loss_bbox": 0.90216, "d3.loss_iou": 1.02259, "d4.loss_cls": 1.28263, "d4.loss_bbox": 0.89865, "d4.loss_iou": 1.02198, "loss": 19.14394, "grad_norm": 178.89299, "time": 0.53281}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.0002, "memory": 16604, "data_time": 0.01037, "loss_cls": 1.29865, "loss_bbox": 0.9266, "loss_iou": 0.9915, "d0.loss_cls": 1.29016, "d0.loss_bbox": 0.91708, "d0.loss_iou": 0.9867, "d1.loss_cls": 1.2997, "d1.loss_bbox": 0.89276, "d1.loss_iou": 0.99107, "d2.loss_cls": 1.30804, "d2.loss_bbox": 0.89288, "d2.loss_iou": 0.97962, "d3.loss_cls": 1.29592, "d3.loss_bbox": 0.90408, "d3.loss_iou": 0.98527, "d4.loss_cls": 1.29356, "d4.loss_bbox": 0.91599, "d4.loss_iou": 0.99286, "loss": 19.16244, "grad_norm": 183.16568, "time": 0.52083}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.0002, "memory": 16604, "data_time": 0.0103, "loss_cls": 1.29298, "loss_bbox": 0.93616, "loss_iou": 1.06927, "d0.loss_cls": 1.29633, "d0.loss_bbox": 0.90022, "d0.loss_iou": 1.05607, "d1.loss_cls": 1.30837, "d1.loss_bbox": 0.90828, "d1.loss_iou": 1.05704, "d2.loss_cls": 1.30331, "d2.loss_bbox": 0.91252, "d2.loss_iou": 1.06622, "d3.loss_cls": 1.28691, "d3.loss_bbox": 0.90734, "d3.loss_iou": 1.06785, "d4.loss_cls": 1.29184, "d4.loss_bbox": 0.91776, "d4.loss_iou": 1.06796, "loss": 19.64642, "grad_norm": 321.3804, "time": 0.52878}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.0002, "memory": 16604, "data_time": 0.00998, "loss_cls": 1.35459, "loss_bbox": 0.95183, "loss_iou": 1.08779, "d0.loss_cls": 1.35967, "d0.loss_bbox": 0.88494, "d0.loss_iou": 1.05, "d1.loss_cls": 1.34638, "d1.loss_bbox": 0.9178, "d1.loss_iou": 1.06239, "d2.loss_cls": 1.36026, "d2.loss_bbox": 0.93018, "d2.loss_iou": 1.06441, "d3.loss_cls": 1.35379, "d3.loss_bbox": 0.94341, "d3.loss_iou": 1.08241, "d4.loss_cls": 1.34767, "d4.loss_bbox": 0.93386, "d4.loss_iou": 1.07559, "loss": 20.10697, "grad_norm": 167.44164, "time": 0.52703}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.0002, "memory": 16604, "data_time": 0.01018, "loss_cls": 1.3196, "loss_bbox": 0.96152, "loss_iou": 1.06206, "d0.loss_cls": 1.32747, "d0.loss_bbox": 0.90296, "d0.loss_iou": 1.04012, "d1.loss_cls": 1.32152, "d1.loss_bbox": 0.9356, "d1.loss_iou": 1.05634, "d2.loss_cls": 1.32273, "d2.loss_bbox": 0.94434, "d2.loss_iou": 1.05713, "d3.loss_cls": 1.31256, "d3.loss_bbox": 0.95949, "d3.loss_iou": 1.06492, "d4.loss_cls": 1.3187, "d4.loss_bbox": 0.95658, "d4.loss_iou": 1.06756, "loss": 19.93121, "grad_norm": 220.9471, "time": 0.52981}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.0002, "memory": 16604, "data_time": 0.01005, "loss_cls": 1.49307, "loss_bbox": 1.07369, "loss_iou": 1.13788, "d0.loss_cls": 1.49368, "d0.loss_bbox": 0.96306, "d0.loss_iou": 1.11002, "d1.loss_cls": 1.49636, "d1.loss_bbox": 1.01217, "d1.loss_iou": 1.1247, "d2.loss_cls": 1.4906, "d2.loss_bbox": 1.02512, "d2.loss_iou": 1.12409, "d3.loss_cls": 1.482, "d3.loss_bbox": 1.03881, "d3.loss_iou": 1.14258, "d4.loss_cls": 1.48496, "d4.loss_bbox": 1.03566, "d4.loss_iou": 1.12992, "loss": 21.85837, "grad_norm": 91.41382, "time": 0.53271}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.0002, "memory": 16604, "data_time": 0.01, "loss_cls": 1.48362, "loss_bbox": 1.16342, "loss_iou": 1.13419, "d0.loss_cls": 1.46305, "d0.loss_bbox": 0.9799, "d0.loss_iou": 1.07517, "d1.loss_cls": 1.47064, "d1.loss_bbox": 1.06863, "d1.loss_iou": 1.0954, "d2.loss_cls": 1.47024, "d2.loss_bbox": 1.12286, "d2.loss_iou": 1.11448, "d3.loss_cls": 1.47502, "d3.loss_bbox": 1.13388, "d3.loss_iou": 1.10691, "d4.loss_cls": 1.4857, "d4.loss_bbox": 1.15751, "d4.loss_iou": 1.13376, "loss": 22.13436, "grad_norm": 93.4973, "time": 0.52555}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.0002, "memory": 16604, "data_time": 0.00991, "loss_cls": 1.45446, "loss_bbox": 1.07598, "loss_iou": 1.10982, "d0.loss_cls": 1.44947, "d0.loss_bbox": 0.97388, "d0.loss_iou": 1.09748, "d1.loss_cls": 1.45266, "d1.loss_bbox": 1.00972, "d1.loss_iou": 1.103, "d2.loss_cls": 1.45542, "d2.loss_bbox": 1.04255, "d2.loss_iou": 1.10958, "d3.loss_cls": 1.45533, "d3.loss_bbox": 1.04687, "d3.loss_iou": 1.1029, "d4.loss_cls": 1.46802, "d4.loss_bbox": 1.04129, "d4.loss_iou": 1.1127, "loss": 21.56112, "grad_norm": 76.64511, "time": 0.5248}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 0.0002, "memory": 16604, "data_time": 0.01044, "loss_cls": 1.43544, "loss_bbox": 0.94765, "loss_iou": 1.10301, "d0.loss_cls": 1.42578, "d0.loss_bbox": 0.88868, "d0.loss_iou": 1.10184, "d1.loss_cls": 1.43217, "d1.loss_bbox": 0.89581, "d1.loss_iou": 1.09526, "d2.loss_cls": 1.42938, "d2.loss_bbox": 0.95416, "d2.loss_iou": 1.11027, "d3.loss_cls": 1.42473, "d3.loss_bbox": 0.95172, "d3.loss_iou": 1.09231, "d4.loss_cls": 1.43294, "d4.loss_bbox": 0.9385, "d4.loss_iou": 1.11787, "loss": 20.77753, "grad_norm": 80.59861, "time": 0.5391}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.0002, "memory": 16604, "data_time": 0.0103, "loss_cls": 1.47897, "loss_bbox": 1.04265, "loss_iou": 1.08683, "d0.loss_cls": 1.49136, "d0.loss_bbox": 0.94665, "d0.loss_iou": 1.04788, "d1.loss_cls": 1.4929, "d1.loss_bbox": 0.99868, "d1.loss_iou": 1.06416, "d2.loss_cls": 1.48887, "d2.loss_bbox": 1.0166, "d2.loss_iou": 1.08089, "d3.loss_cls": 1.47581, "d3.loss_bbox": 1.05933, "d3.loss_iou": 1.08835, "d4.loss_cls": 1.47611, "d4.loss_bbox": 1.00216, "d4.loss_iou": 1.06169, "loss": 21.39988, "grad_norm": 84.82585, "time": 0.52518}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 0.0002, "memory": 16604, "data_time": 0.01041, "loss_cls": 1.40797, "loss_bbox": 1.08811, "loss_iou": 1.18612, "d0.loss_cls": 1.42338, "d0.loss_bbox": 0.95307, "d0.loss_iou": 1.12591, "d1.loss_cls": 1.43312, "d1.loss_bbox": 0.96578, "d1.loss_iou": 1.1392, "d2.loss_cls": 1.4202, "d2.loss_bbox": 1.05296, "d2.loss_iou": 1.17445, "d3.loss_cls": 1.42216, "d3.loss_bbox": 1.05269, "d3.loss_iou": 1.16312, "d4.loss_cls": 1.41958, "d4.loss_bbox": 1.01057, "d4.loss_iou": 1.16441, "loss": 21.6028, "grad_norm": 80.85901, "time": 0.5436}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.0002, "memory": 16604, "data_time": 0.0104, "loss_cls": 1.45944, "loss_bbox": 1.04228, "loss_iou": 1.13489, "d0.loss_cls": 1.45181, "d0.loss_bbox": 0.92663, "d0.loss_iou": 1.10997, "d1.loss_cls": 1.43607, "d1.loss_bbox": 0.99276, "d1.loss_iou": 1.13539, "d2.loss_cls": 1.45541, "d2.loss_bbox": 1.01071, "d2.loss_iou": 1.13794, "d3.loss_cls": 1.46433, "d3.loss_bbox": 1.00959, "d3.loss_iou": 1.12458, "d4.loss_cls": 1.46026, "d4.loss_bbox": 1.00215, "d4.loss_iou": 1.12297, "loss": 21.47717, "grad_norm": 84.93754, "time": 0.53565}
{"mode": "train", "epoch": 3, "iter": 950, "lr": 0.0002, "memory": 16604, "data_time": 0.01076, "loss_cls": 1.40601, "loss_bbox": 1.00798, "loss_iou": 1.11704, "d0.loss_cls": 1.41906, "d0.loss_bbox": 0.91532, "d0.loss_iou": 1.08875, "d1.loss_cls": 1.44024, "d1.loss_bbox": 0.94, "d1.loss_iou": 1.09579, "d2.loss_cls": 1.43232, "d2.loss_bbox": 0.98671, "d2.loss_iou": 1.11216, "d3.loss_cls": 1.4122, "d3.loss_bbox": 0.99843, "d3.loss_iou": 1.11885, "d4.loss_cls": 1.41143, "d4.loss_bbox": 0.9814, "d4.loss_iou": 1.1139, "loss": 20.9976, "grad_norm": 83.90629, "time": 0.54415}
{"mode": "val", "epoch": 3, "iter": 969, "lr": 0.0002, "bbox_mAP": 0.0, "bbox_mAP_50": 0.002, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.000 0.002 0.000 0.000 0.000 0.001"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.0002, "memory": 16604, "data_time": 0.0588, "loss_cls": 1.39511, "loss_bbox": 0.97079, "loss_iou": 1.13028, "d0.loss_cls": 1.38903, "d0.loss_bbox": 0.91442, "d0.loss_iou": 1.11074, "d1.loss_cls": 1.39467, "d1.loss_bbox": 0.93189, "d1.loss_iou": 1.12014, "d2.loss_cls": 1.3966, "d2.loss_bbox": 0.97535, "d2.loss_iou": 1.13117, "d3.loss_cls": 1.38882, "d3.loss_bbox": 1.03272, "d3.loss_iou": 1.15206, "d4.loss_cls": 1.39313, "d4.loss_bbox": 0.98517, "d4.loss_iou": 1.1372, "loss": 20.9493, "grad_norm": 82.56384, "time": 0.59555}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.0002, "memory": 16604, "data_time": 0.01081, "loss_cls": 1.4169, "loss_bbox": 1.05229, "loss_iou": 1.12149, "d0.loss_cls": 1.40536, "d0.loss_bbox": 0.91857, "d0.loss_iou": 1.03892, "d1.loss_cls": 1.41335, "d1.loss_bbox": 0.95953, "d1.loss_iou": 1.04593, "d2.loss_cls": 1.40322, "d2.loss_bbox": 1.02454, "d2.loss_iou": 1.08379, "d3.loss_cls": 1.40074, "d3.loss_bbox": 1.09703, "d3.loss_iou": 1.10363, "d4.loss_cls": 1.41048, "d4.loss_bbox": 1.00766, "d4.loss_iou": 1.09357, "loss": 20.99699, "grad_norm": 82.52396, "time": 0.53138}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.0002, "memory": 16604, "data_time": 0.01038, "loss_cls": 1.40976, "loss_bbox": 1.05394, "loss_iou": 1.10993, "d0.loss_cls": 1.40226, "d0.loss_bbox": 0.92254, "d0.loss_iou": 1.06003, "d1.loss_cls": 1.40448, "d1.loss_bbox": 0.95074, "d1.loss_iou": 1.06977, "d2.loss_cls": 1.41439, "d2.loss_bbox": 0.97155, "d2.loss_iou": 1.06965, "d3.loss_cls": 1.41177, "d3.loss_bbox": 1.06133, "d3.loss_iou": 1.10016, "d4.loss_cls": 1.40634, "d4.loss_bbox": 1.00667, "d4.loss_iou": 1.09604, "loss": 20.92135, "grad_norm": 76.62148, "time": 0.54547}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.0002, "memory": 16604, "data_time": 0.01037, "loss_cls": 1.44462, "loss_bbox": 1.02963, "loss_iou": 1.13266, "d0.loss_cls": 1.44282, "d0.loss_bbox": 0.89417, "d0.loss_iou": 1.07536, "d1.loss_cls": 1.44437, "d1.loss_bbox": 0.92984, "d1.loss_iou": 1.08124, "d2.loss_cls": 1.43133, "d2.loss_bbox": 0.9514, "d2.loss_iou": 1.0959, "d3.loss_cls": 1.44509, "d3.loss_bbox": 0.98262, "d3.loss_iou": 1.09612, "d4.loss_cls": 1.44723, "d4.loss_bbox": 0.95504, "d4.loss_iou": 1.09811, "loss": 20.97756, "grad_norm": 80.98047, "time": 0.53767}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.0002, "memory": 16604, "data_time": 0.01022, "loss_cls": 1.43295, "loss_bbox": 1.00935, "loss_iou": 1.09565, "d0.loss_cls": 1.4425, "d0.loss_bbox": 0.9164, "d0.loss_iou": 1.05937, "d1.loss_cls": 1.44663, "d1.loss_bbox": 0.94553, "d1.loss_iou": 1.06464, "d2.loss_cls": 1.42971, "d2.loss_bbox": 0.98068, "d2.loss_iou": 1.09332, "d3.loss_cls": 1.43933, "d3.loss_bbox": 0.99957, "d3.loss_iou": 1.09409, "d4.loss_cls": 1.42351, "d4.loss_bbox": 0.9912, "d4.loss_iou": 1.08759, "loss": 20.95202, "grad_norm": 81.71515, "time": 0.52726}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.0002, "memory": 16604, "data_time": 0.01034, "loss_cls": 1.42598, "loss_bbox": 1.00568, "loss_iou": 1.12103, "d0.loss_cls": 1.42416, "d0.loss_bbox": 0.93301, "d0.loss_iou": 1.10023, "d1.loss_cls": 1.42484, "d1.loss_bbox": 0.96882, "d1.loss_iou": 1.11184, "d2.loss_cls": 1.42452, "d2.loss_bbox": 1.01139, "d2.loss_iou": 1.13301, "d3.loss_cls": 1.41673, "d3.loss_bbox": 1.0269, "d3.loss_iou": 1.12651, "d4.loss_cls": 1.42815, "d4.loss_bbox": 1.00923, "d4.loss_iou": 1.12392, "loss": 21.21596, "grad_norm": 81.87663, "time": 0.53115}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.0002, "memory": 16604, "data_time": 0.00963, "loss_cls": 1.44253, "loss_bbox": 0.99765, "loss_iou": 1.08784, "d0.loss_cls": 1.45218, "d0.loss_bbox": 0.89452, "d0.loss_iou": 1.03231, "d1.loss_cls": 1.45035, "d1.loss_bbox": 0.92613, "d1.loss_iou": 1.05484, "d2.loss_cls": 1.45544, "d2.loss_bbox": 0.94705, "d2.loss_iou": 1.05212, "d3.loss_cls": 1.4543, "d3.loss_bbox": 0.96236, "d3.loss_iou": 1.05184, "d4.loss_cls": 1.4612, "d4.loss_bbox": 0.97601, "d4.loss_iou": 1.06046, "loss": 20.75911, "grad_norm": 84.23964, "time": 0.52828}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.0002, "memory": 16604, "data_time": 0.00983, "loss_cls": 1.44846, "loss_bbox": 0.96293, "loss_iou": 1.08601, "d0.loss_cls": 1.45767, "d0.loss_bbox": 0.90974, "d0.loss_iou": 1.05222, "d1.loss_cls": 1.46374, "d1.loss_bbox": 0.92851, "d1.loss_iou": 1.07048, "d2.loss_cls": 1.44532, "d2.loss_bbox": 0.97142, "d2.loss_iou": 1.08086, "d3.loss_cls": 1.43784, "d3.loss_bbox": 0.98509, "d3.loss_iou": 1.08226, "d4.loss_cls": 1.45813, "d4.loss_bbox": 0.96477, "d4.loss_iou": 1.08515, "loss": 20.89059, "grad_norm": 86.21486, "time": 0.52009}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.0002, "memory": 16604, "data_time": 0.01051, "loss_cls": 1.4582, "loss_bbox": 0.96537, "loss_iou": 1.08552, "d0.loss_cls": 1.47367, "d0.loss_bbox": 0.89981, "d0.loss_iou": 1.0577, "d1.loss_cls": 1.48845, "d1.loss_bbox": 0.92488, "d1.loss_iou": 1.07319, "d2.loss_cls": 1.4707, "d2.loss_bbox": 0.9343, "d2.loss_iou": 1.08309, "d3.loss_cls": 1.4648, "d3.loss_bbox": 0.9778, "d3.loss_iou": 1.09075, "d4.loss_cls": 1.47039, "d4.loss_bbox": 0.94415, "d4.loss_iou": 1.06571, "loss": 20.92848, "grad_norm": 87.61123, "time": 0.53025}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.0002, "memory": 16604, "data_time": 0.01047, "loss_cls": 1.46449, "loss_bbox": 0.95251, "loss_iou": 1.08831, "d0.loss_cls": 1.46649, "d0.loss_bbox": 0.89537, "d0.loss_iou": 1.07482, "d1.loss_cls": 1.46025, "d1.loss_bbox": 0.90445, "d1.loss_iou": 1.07474, "d2.loss_cls": 1.47413, "d2.loss_bbox": 0.93337, "d2.loss_iou": 1.0805, "d3.loss_cls": 1.46384, "d3.loss_bbox": 0.95576, "d3.loss_iou": 1.0786, "d4.loss_cls": 1.47106, "d4.loss_bbox": 0.95876, "d4.loss_iou": 1.09007, "loss": 20.88752, "grad_norm": 87.15006, "time": 0.52811}
{"mode": "train", "epoch": 4, "iter": 550, "lr": 0.0002, "memory": 16604, "data_time": 0.01057, "loss_cls": 1.41002, "loss_bbox": 0.95433, "loss_iou": 1.11982, "d0.loss_cls": 1.40217, "d0.loss_bbox": 0.90156, "d0.loss_iou": 1.10281, "d1.loss_cls": 1.39807, "d1.loss_bbox": 0.92054, "d1.loss_iou": 1.10997, "d2.loss_cls": 1.39837, "d2.loss_bbox": 0.93883, "d2.loss_iou": 1.11637, "d3.loss_cls": 1.40118, "d3.loss_bbox": 0.96638, "d3.loss_iou": 1.11269, "d4.loss_cls": 1.39955, "d4.loss_bbox": 0.96041, "d4.loss_iou": 1.12013, "loss": 20.7332, "grad_norm": 78.17809, "time": 0.53003}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.0002, "memory": 16604, "data_time": 0.01083, "loss_cls": 1.4579, "loss_bbox": 0.96059, "loss_iou": 1.08239, "d0.loss_cls": 1.46344, "d0.loss_bbox": 0.93018, "d0.loss_iou": 1.04909, "d1.loss_cls": 1.44589, "d1.loss_bbox": 0.96993, "d1.loss_iou": 1.07925, "d2.loss_cls": 1.45694, "d2.loss_bbox": 0.96641, "d2.loss_iou": 1.07538, "d3.loss_cls": 1.44842, "d3.loss_bbox": 0.9853, "d3.loss_iou": 1.08034, "d4.loss_cls": 1.45334, "d4.loss_bbox": 0.98331, "d4.loss_iou": 1.08461, "loss": 20.97272, "grad_norm": 84.74189, "time": 0.53969}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.0002, "memory": 16604, "data_time": 0.01063, "loss_cls": 1.46039, "loss_bbox": 0.99054, "loss_iou": 1.07032, "d0.loss_cls": 1.46198, "d0.loss_bbox": 0.96451, "d0.loss_iou": 1.06318, "d1.loss_cls": 1.44782, "d1.loss_bbox": 1.02374, "d1.loss_iou": 1.08061, "d2.loss_cls": 1.45041, "d2.loss_bbox": 1.01062, "d2.loss_iou": 1.07659, "d3.loss_cls": 1.44198, "d3.loss_bbox": 1.03346, "d3.loss_iou": 1.0712, "d4.loss_cls": 1.45017, "d4.loss_bbox": 0.99291, "d4.loss_iou": 1.0679, "loss": 21.15834, "grad_norm": 85.53683, "time": 0.52713}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.0002, "memory": 16604, "data_time": 0.01026, "loss_cls": 1.44993, "loss_bbox": 1.0072, "loss_iou": 1.09812, "d0.loss_cls": 1.44292, "d0.loss_bbox": 0.92767, "d0.loss_iou": 1.04665, "d1.loss_cls": 1.45666, "d1.loss_bbox": 0.96059, "d1.loss_iou": 1.05659, "d2.loss_cls": 1.44815, "d2.loss_bbox": 0.96895, "d2.loss_iou": 1.06139, "d3.loss_cls": 1.43858, "d3.loss_bbox": 0.99618, "d3.loss_iou": 1.07347, "d4.loss_cls": 1.45031, "d4.loss_bbox": 0.96056, "d4.loss_iou": 1.06211, "loss": 20.90602, "grad_norm": 90.74327, "time": 0.53065}
{"mode": "train", "epoch": 4, "iter": 750, "lr": 0.0002, "memory": 16604, "data_time": 0.01013, "loss_cls": 1.45349, "loss_bbox": 0.97517, "loss_iou": 1.07007, "d0.loss_cls": 1.45029, "d0.loss_bbox": 0.94107, "d0.loss_iou": 1.02131, "d1.loss_cls": 1.44514, "d1.loss_bbox": 0.9583, "d1.loss_iou": 1.04053, "d2.loss_cls": 1.44146, "d2.loss_bbox": 0.98747, "d2.loss_iou": 1.06202, "d3.loss_cls": 1.4402, "d3.loss_bbox": 0.95709, "d3.loss_iou": 1.04372, "d4.loss_cls": 1.46858, "d4.loss_bbox": 0.97504, "d4.loss_iou": 1.06705, "loss": 20.79798, "grad_norm": 92.57712, "time": 0.53809}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 0.0002, "memory": 16604, "data_time": 0.00963, "loss_cls": 1.42979, "loss_bbox": 0.95811, "loss_iou": 1.12475, "d0.loss_cls": 1.42546, "d0.loss_bbox": 0.90525, "d0.loss_iou": 1.10025, "d1.loss_cls": 1.41429, "d1.loss_bbox": 0.96386, "d1.loss_iou": 1.12425, "d2.loss_cls": 1.42258, "d2.loss_bbox": 0.95895, "d2.loss_iou": 1.11895, "d3.loss_cls": 1.42102, "d3.loss_bbox": 0.96526, "d3.loss_iou": 1.12584, "d4.loss_cls": 1.42488, "d4.loss_bbox": 0.95912, "d4.loss_iou": 1.12456, "loss": 20.96716, "grad_norm": 84.63117, "time": 0.5186}
{"mode": "train", "epoch": 4, "iter": 850, "lr": 0.0002, "memory": 16604, "data_time": 0.01006, "loss_cls": 1.43046, "loss_bbox": 0.968, "loss_iou": 1.06772, "d0.loss_cls": 1.43893, "d0.loss_bbox": 0.88604, "d0.loss_iou": 1.048, "d1.loss_cls": 1.44065, "d1.loss_bbox": 0.89999, "d1.loss_iou": 1.05984, "d2.loss_cls": 1.43128, "d2.loss_bbox": 0.90756, "d2.loss_iou": 1.05773, "d3.loss_cls": 1.44273, "d3.loss_bbox": 0.93997, "d3.loss_iou": 1.07226, "d4.loss_cls": 1.43467, "d4.loss_bbox": 0.99048, "d4.loss_iou": 1.09746, "loss": 20.61375, "grad_norm": 83.23264, "time": 0.53563}
{"mode": "train", "epoch": 4, "iter": 900, "lr": 0.0002, "memory": 16604, "data_time": 0.01019, "loss_cls": 1.43816, "loss_bbox": 0.87046, "loss_iou": 1.05759, "d0.loss_cls": 1.43098, "d0.loss_bbox": 0.85499, "d0.loss_iou": 1.05946, "d1.loss_cls": 1.43075, "d1.loss_bbox": 0.87081, "d1.loss_iou": 1.07056, "d2.loss_cls": 1.43261, "d2.loss_bbox": 0.85632, "d2.loss_iou": 1.06598, "d3.loss_cls": 1.43329, "d3.loss_bbox": 0.88452, "d3.loss_iou": 1.07103, "d4.loss_cls": 1.44093, "d4.loss_bbox": 0.88261, "d4.loss_iou": 1.07018, "loss": 20.22124, "grad_norm": 87.73069, "time": 0.53242}
{"mode": "train", "epoch": 4, "iter": 950, "lr": 0.0002, "memory": 16604, "data_time": 0.01081, "loss_cls": 1.42464, "loss_bbox": 0.95497, "loss_iou": 1.08722, "d0.loss_cls": 1.42386, "d0.loss_bbox": 0.91559, "d0.loss_iou": 1.05943, "d1.loss_cls": 1.41856, "d1.loss_bbox": 0.93532, "d1.loss_iou": 1.06928, "d2.loss_cls": 1.42243, "d2.loss_bbox": 0.94571, "d2.loss_iou": 1.08163, "d3.loss_cls": 1.41773, "d3.loss_bbox": 0.96707, "d3.loss_iou": 1.07971, "d4.loss_cls": 1.43387, "d4.loss_bbox": 0.94298, "d4.loss_iou": 1.0714, "loss": 20.65138, "grad_norm": 85.44289, "time": 0.5405}
{"mode": "val", "epoch": 4, "iter": 969, "lr": 0.0002, "bbox_mAP": 0.001, "bbox_mAP_50": 0.002, "bbox_mAP_75": 0.001, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.001 0.002 0.001 0.000 0.000 0.001"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.0002, "memory": 16604, "data_time": 0.05697, "loss_cls": 1.46724, "loss_bbox": 0.93524, "loss_iou": 1.04257, "d0.loss_cls": 1.47506, "d0.loss_bbox": 0.89192, "d0.loss_iou": 1.01801, "d1.loss_cls": 1.46212, "d1.loss_bbox": 0.91853, "d1.loss_iou": 1.02562, "d2.loss_cls": 1.47037, "d2.loss_bbox": 0.92716, "d2.loss_iou": 1.02905, "d3.loss_cls": 1.46914, "d3.loss_bbox": 0.91877, "d3.loss_iou": 1.02573, "d4.loss_cls": 1.47302, "d4.loss_bbox": 0.94016, "d4.loss_iou": 1.03692, "loss": 20.52662, "grad_norm": 86.55126, "time": 0.58744}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.0002, "memory": 16604, "data_time": 0.01037, "loss_cls": 1.44276, "loss_bbox": 0.92427, "loss_iou": 1.07244, "d0.loss_cls": 1.45958, "d0.loss_bbox": 0.8769, "d0.loss_iou": 1.05933, "d1.loss_cls": 1.45746, "d1.loss_bbox": 0.90108, "d1.loss_iou": 1.06351, "d2.loss_cls": 1.46009, "d2.loss_bbox": 0.917, "d2.loss_iou": 1.06797, "d3.loss_cls": 1.44491, "d3.loss_bbox": 0.91194, "d3.loss_iou": 1.06003, "d4.loss_cls": 1.45272, "d4.loss_bbox": 0.91137, "d4.loss_iou": 1.06626, "loss": 20.54961, "grad_norm": 84.83105, "time": 0.52974}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.0002, "memory": 16604, "data_time": 0.00982, "loss_cls": 1.40747, "loss_bbox": 0.96038, "loss_iou": 1.05003, "d0.loss_cls": 1.41901, "d0.loss_bbox": 0.94563, "d0.loss_iou": 1.03907, "d1.loss_cls": 1.41574, "d1.loss_bbox": 0.97141, "d1.loss_iou": 1.04827, "d2.loss_cls": 1.42843, "d2.loss_bbox": 0.96279, "d2.loss_iou": 1.05769, "d3.loss_cls": 1.41146, "d3.loss_bbox": 0.96918, "d3.loss_iou": 1.04664, "d4.loss_cls": 1.41375, "d4.loss_bbox": 0.98724, "d4.loss_iou": 1.06263, "loss": 20.59683, "grad_norm": 77.86389, "time": 0.53457}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.0002, "memory": 16604, "data_time": 0.01048, "loss_cls": 1.44016, "loss_bbox": 0.92072, "loss_iou": 1.09612, "d0.loss_cls": 1.4491, "d0.loss_bbox": 0.88457, "d0.loss_iou": 1.0921, "d1.loss_cls": 1.45016, "d1.loss_bbox": 0.91208, "d1.loss_iou": 1.08814, "d2.loss_cls": 1.44492, "d2.loss_bbox": 0.92474, "d2.loss_iou": 1.09487, "d3.loss_cls": 1.44198, "d3.loss_bbox": 0.93518, "d3.loss_iou": 1.08955, "d4.loss_cls": 1.45738, "d4.loss_bbox": 0.92503, "d4.loss_iou": 1.09071, "loss": 20.7375, "grad_norm": 82.16027, "time": 0.53828}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.0002, "memory": 16604, "data_time": 0.01031, "loss_cls": 1.43711, "loss_bbox": 0.94008, "loss_iou": 1.06117, "d0.loss_cls": 1.43058, "d0.loss_bbox": 0.9046, "d0.loss_iou": 1.03995, "d1.loss_cls": 1.42558, "d1.loss_bbox": 0.92847, "d1.loss_iou": 1.04392, "d2.loss_cls": 1.4357, "d2.loss_bbox": 0.93825, "d2.loss_iou": 1.05737, "d3.loss_cls": 1.42819, "d3.loss_bbox": 0.93894, "d3.loss_iou": 1.05111, "d4.loss_cls": 1.44059, "d4.loss_bbox": 0.9481, "d4.loss_iou": 1.06251, "loss": 20.51223, "grad_norm": 87.58796, "time": 0.52748}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.0002, "memory": 16604, "data_time": 0.0106, "loss_cls": 1.44141, "loss_bbox": 0.94076, "loss_iou": 1.07442, "d0.loss_cls": 1.44919, "d0.loss_bbox": 0.88339, "d0.loss_iou": 1.04271, "d1.loss_cls": 1.44125, "d1.loss_bbox": 0.90418, "d1.loss_iou": 1.06218, "d2.loss_cls": 1.44508, "d2.loss_bbox": 0.93659, "d2.loss_iou": 1.07531, "d3.loss_cls": 1.43588, "d3.loss_bbox": 0.98056, "d3.loss_iou": 1.08407, "d4.loss_cls": 1.43438, "d4.loss_bbox": 0.95756, "d4.loss_iou": 1.07986, "loss": 20.6688, "grad_norm": 80.55812, "time": 0.53996}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.0002, "memory": 16604, "data_time": 0.0104, "loss_cls": 1.41606, "loss_bbox": 0.90227, "loss_iou": 1.09846, "d0.loss_cls": 1.41345, "d0.loss_bbox": 0.88108, "d0.loss_iou": 1.09401, "d1.loss_cls": 1.411, "d1.loss_bbox": 0.90373, "d1.loss_iou": 1.09739, "d2.loss_cls": 1.41262, "d2.loss_bbox": 0.90867, "d2.loss_iou": 1.10395, "d3.loss_cls": 1.40706, "d3.loss_bbox": 0.91342, "d3.loss_iou": 1.0973, "d4.loss_cls": 1.4106, "d4.loss_bbox": 0.92347, "d4.loss_iou": 1.10871, "loss": 20.50325, "grad_norm": 79.88302, "time": 0.53422}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.0002, "memory": 16604, "data_time": 0.01054, "loss_cls": 1.3995, "loss_bbox": 0.86411, "loss_iou": 1.07762, "d0.loss_cls": 1.39194, "d0.loss_bbox": 0.85879, "d0.loss_iou": 1.08463, "d1.loss_cls": 1.38739, "d1.loss_bbox": 0.85718, "d1.loss_iou": 1.07214, "d2.loss_cls": 1.38605, "d2.loss_bbox": 0.86947, "d2.loss_iou": 1.08008, "d3.loss_cls": 1.38572, "d3.loss_bbox": 0.87115, "d3.loss_iou": 1.07696, "d4.loss_cls": 1.38412, "d4.loss_bbox": 0.88135, "d4.loss_iou": 1.08229, "loss": 20.01047, "grad_norm": 82.70078, "time": 0.52039}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.0002, "memory": 16604, "data_time": 0.01079, "loss_cls": 1.45212, "loss_bbox": 0.91669, "loss_iou": 1.07896, "d0.loss_cls": 1.45244, "d0.loss_bbox": 0.89543, "d0.loss_iou": 1.07011, "d1.loss_cls": 1.45313, "d1.loss_bbox": 0.91326, "d1.loss_iou": 1.06609, "d2.loss_cls": 1.4507, "d2.loss_bbox": 0.90822, "d2.loss_iou": 1.07412, "d3.loss_cls": 1.44803, "d3.loss_bbox": 0.91951, "d3.loss_iou": 1.07574, "d4.loss_cls": 1.4647, "d4.loss_bbox": 0.89137, "d4.loss_iou": 1.0658, "loss": 20.59642, "grad_norm": 84.50226, "time": 0.52595}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.0002, "memory": 16604, "data_time": 0.01016, "loss_cls": 1.42717, "loss_bbox": 0.8975, "loss_iou": 1.05829, "d0.loss_cls": 1.41312, "d0.loss_bbox": 0.85663, "d0.loss_iou": 1.03394, "d1.loss_cls": 1.4118, "d1.loss_bbox": 0.85848, "d1.loss_iou": 1.03269, "d2.loss_cls": 1.4126, "d2.loss_bbox": 0.86305, "d2.loss_iou": 1.03652, "d3.loss_cls": 1.42186, "d3.loss_bbox": 0.8645, "d3.loss_iou": 1.04012, "d4.loss_cls": 1.41723, "d4.loss_bbox": 0.88959, "d4.loss_iou": 1.0445, "loss": 19.97959, "grad_norm": 79.47927, "time": 0.52534}
{"mode": "train", "epoch": 5, "iter": 550, "lr": 0.0002, "memory": 16604, "data_time": 0.01054, "loss_cls": 1.46827, "loss_bbox": 0.96094, "loss_iou": 1.01959, "d0.loss_cls": 1.4552, "d0.loss_bbox": 0.90971, "d0.loss_iou": 0.99123, "d1.loss_cls": 1.45868, "d1.loss_bbox": 0.91996, "d1.loss_iou": 1.00053, "d2.loss_cls": 1.45627, "d2.loss_bbox": 0.9126, "d2.loss_iou": 0.99065, "d3.loss_cls": 1.45401, "d3.loss_bbox": 0.94608, "d3.loss_iou": 1.00104, "d4.loss_cls": 1.46444, "d4.loss_bbox": 0.94275, "d4.loss_iou": 1.0051, "loss": 20.35705, "grad_norm": 84.33249, "time": 0.52984}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 0.0002, "memory": 16604, "data_time": 0.01029, "loss_cls": 1.44648, "loss_bbox": 0.92022, "loss_iou": 1.05385, "d0.loss_cls": 1.44568, "d0.loss_bbox": 0.87845, "d0.loss_iou": 1.02712, "d1.loss_cls": 1.44872, "d1.loss_bbox": 0.88531, "d1.loss_iou": 1.02632, "d2.loss_cls": 1.44652, "d2.loss_bbox": 0.87644, "d2.loss_iou": 1.02425, "d3.loss_cls": 1.44919, "d3.loss_bbox": 0.90246, "d3.loss_iou": 1.03368, "d4.loss_cls": 1.45391, "d4.loss_bbox": 0.89865, "d4.loss_iou": 1.03448, "loss": 20.25174, "grad_norm": 86.70264, "time": 0.5324}
{"mode": "train", "epoch": 5, "iter": 650, "lr": 0.0002, "memory": 16604, "data_time": 0.01011, "loss_cls": 1.43698, "loss_bbox": 0.88681, "loss_iou": 1.06474, "d0.loss_cls": 1.43279, "d0.loss_bbox": 0.86618, "d0.loss_iou": 1.05464, "d1.loss_cls": 1.43419, "d1.loss_bbox": 0.86936, "d1.loss_iou": 1.06379, "d2.loss_cls": 1.43871, "d2.loss_bbox": 0.88375, "d2.loss_iou": 1.07298, "d3.loss_cls": 1.43425, "d3.loss_bbox": 0.87907, "d3.loss_iou": 1.06372, "d4.loss_cls": 1.43168, "d4.loss_bbox": 0.88503, "d4.loss_iou": 1.06723, "loss": 20.2659, "grad_norm": 85.50356, "time": 0.52334}
{"mode": "train", "epoch": 5, "iter": 700, "lr": 0.0002, "memory": 16604, "data_time": 0.01053, "loss_cls": 1.43528, "loss_bbox": 0.93287, "loss_iou": 1.02868, "d0.loss_cls": 1.44658, "d0.loss_bbox": 0.8965, "d0.loss_iou": 1.00977, "d1.loss_cls": 1.44294, "d1.loss_bbox": 0.90461, "d1.loss_iou": 1.01459, "d2.loss_cls": 1.43367, "d2.loss_bbox": 0.91823, "d2.loss_iou": 1.0221, "d3.loss_cls": 1.42516, "d3.loss_bbox": 0.93082, "d3.loss_iou": 1.02446, "d4.loss_cls": 1.42775, "d4.loss_bbox": 0.9504, "d4.loss_iou": 1.03476, "loss": 20.27919, "grad_norm": 83.55854, "time": 0.52918}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.0002, "memory": 16604, "data_time": 0.01084, "loss_cls": 1.41108, "loss_bbox": 0.94304, "loss_iou": 1.08837, "d0.loss_cls": 1.4239, "d0.loss_bbox": 0.89344, "d0.loss_iou": 1.06709, "d1.loss_cls": 1.42819, "d1.loss_bbox": 0.90702, "d1.loss_iou": 1.07262, "d2.loss_cls": 1.42612, "d2.loss_bbox": 0.91389, "d2.loss_iou": 1.06942, "d3.loss_cls": 1.41912, "d3.loss_bbox": 0.91526, "d3.loss_iou": 1.08173, "d4.loss_cls": 1.41901, "d4.loss_bbox": 0.92596, "d4.loss_iou": 1.08113, "loss": 20.4864, "grad_norm": 82.8168, "time": 0.54032}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.0002, "memory": 16604, "data_time": 0.01045, "loss_cls": 1.43733, "loss_bbox": 0.92227, "loss_iou": 1.0467, "d0.loss_cls": 1.43743, "d0.loss_bbox": 0.86533, "d0.loss_iou": 1.02026, "d1.loss_cls": 1.43588, "d1.loss_bbox": 0.8871, "d1.loss_iou": 1.0325, "d2.loss_cls": 1.42717, "d2.loss_bbox": 0.89668, "d2.loss_iou": 1.04841, "d3.loss_cls": 1.43058, "d3.loss_bbox": 0.90839, "d3.loss_iou": 1.03503, "d4.loss_cls": 1.43853, "d4.loss_bbox": 0.90436, "d4.loss_iou": 1.03577, "loss": 20.20972, "grad_norm": 85.46224, "time": 0.52194}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.0002, "memory": 16604, "data_time": 0.01048, "loss_cls": 1.41254, "loss_bbox": 0.9409, "loss_iou": 1.07252, "d0.loss_cls": 1.41689, "d0.loss_bbox": 0.87425, "d0.loss_iou": 1.05885, "d1.loss_cls": 1.42285, "d1.loss_bbox": 0.88173, "d1.loss_iou": 1.05582, "d2.loss_cls": 1.41494, "d2.loss_bbox": 0.90467, "d2.loss_iou": 1.07444, "d3.loss_cls": 1.41874, "d3.loss_bbox": 0.90508, "d3.loss_iou": 1.06151, "d4.loss_cls": 1.41124, "d4.loss_bbox": 0.93425, "d4.loss_iou": 1.07456, "loss": 20.33579, "grad_norm": 80.55642, "time": 0.53907}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.0002, "memory": 16604, "data_time": 0.0104, "loss_cls": 1.40333, "loss_bbox": 0.91179, "loss_iou": 1.08853, "d0.loss_cls": 1.38959, "d0.loss_bbox": 0.86359, "d0.loss_iou": 1.08475, "d1.loss_cls": 1.38349, "d1.loss_bbox": 0.87966, "d1.loss_iou": 1.08899, "d2.loss_cls": 1.39725, "d2.loss_bbox": 0.89124, "d2.loss_iou": 1.09032, "d3.loss_cls": 1.3981, "d3.loss_bbox": 0.90275, "d3.loss_iou": 1.10279, "d4.loss_cls": 1.40282, "d4.loss_bbox": 0.8916, "d4.loss_iou": 1.0979, "loss": 20.26849, "grad_norm": 81.44916, "time": 0.53899}
{"mode": "train", "epoch": 5, "iter": 950, "lr": 0.0002, "memory": 16604, "data_time": 0.01067, "loss_cls": 1.44188, "loss_bbox": 0.95895, "loss_iou": 1.00862, "d0.loss_cls": 1.45671, "d0.loss_bbox": 0.90666, "d0.loss_iou": 0.98414, "d1.loss_cls": 1.45744, "d1.loss_bbox": 0.91159, "d1.loss_iou": 0.98235, "d2.loss_cls": 1.45008, "d2.loss_bbox": 0.94257, "d2.loss_iou": 0.99309, "d3.loss_cls": 1.45793, "d3.loss_bbox": 0.94789, "d3.loss_iou": 0.99927, "d4.loss_cls": 1.45588, "d4.loss_bbox": 0.95745, "d4.loss_iou": 1.00451, "loss": 20.31699, "grad_norm": 89.09879, "time": 0.5361}
{"mode": "val", "epoch": 5, "iter": 969, "lr": 0.0002, "bbox_mAP": 0.0, "bbox_mAP_50": 0.001, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.001 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.0002, "memory": 16604, "data_time": 0.05751, "loss_cls": 1.47312, "loss_bbox": 0.90154, "loss_iou": 1.01661, "d0.loss_cls": 1.47157, "d0.loss_bbox": 0.90415, "d0.loss_iou": 1.0084, "d1.loss_cls": 1.48465, "d1.loss_bbox": 0.91337, "d1.loss_iou": 1.00715, "d2.loss_cls": 1.48968, "d2.loss_bbox": 0.90706, "d2.loss_iou": 1.00944, "d3.loss_cls": 1.47631, "d3.loss_bbox": 0.92755, "d3.loss_iou": 1.01881, "d4.loss_cls": 1.47663, "d4.loss_bbox": 0.91678, "d4.loss_iou": 1.00772, "loss": 20.41055, "grad_norm": 90.52153, "time": 0.59112}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.0002, "memory": 16604, "data_time": 0.00975, "loss_cls": 1.41353, "loss_bbox": 0.92238, "loss_iou": 1.03838, "d0.loss_cls": 1.42143, "d0.loss_bbox": 0.87686, "d0.loss_iou": 1.02159, "d1.loss_cls": 1.4195, "d1.loss_bbox": 0.88574, "d1.loss_iou": 1.02196, "d2.loss_cls": 1.42739, "d2.loss_bbox": 0.89669, "d2.loss_iou": 1.02363, "d3.loss_cls": 1.41404, "d3.loss_bbox": 0.91394, "d3.loss_iou": 1.02178, "d4.loss_cls": 1.40861, "d4.loss_bbox": 0.92446, "d4.loss_iou": 1.0312, "loss": 20.08313, "grad_norm": 82.22619, "time": 0.53055}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.0002, "memory": 16604, "data_time": 0.0102, "loss_cls": 1.43964, "loss_bbox": 0.93215, "loss_iou": 1.03085, "d0.loss_cls": 1.44555, "d0.loss_bbox": 0.92819, "d0.loss_iou": 1.02352, "d1.loss_cls": 1.44403, "d1.loss_bbox": 0.92642, "d1.loss_iou": 1.01693, "d2.loss_cls": 1.44861, "d2.loss_bbox": 0.90674, "d2.loss_iou": 1.02119, "d3.loss_cls": 1.43894, "d3.loss_bbox": 0.91676, "d3.loss_iou": 1.03521, "d4.loss_cls": 1.43488, "d4.loss_bbox": 0.92251, "d4.loss_iou": 1.02685, "loss": 20.33897, "grad_norm": 87.71061, "time": 0.53686}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.0002, "memory": 16604, "data_time": 0.01075, "loss_cls": 1.43937, "loss_bbox": 0.92659, "loss_iou": 1.05073, "d0.loss_cls": 1.4387, "d0.loss_bbox": 0.91394, "d0.loss_iou": 1.05275, "d1.loss_cls": 1.44202, "d1.loss_bbox": 0.91317, "d1.loss_iou": 1.06037, "d2.loss_cls": 1.4352, "d2.loss_bbox": 0.94519, "d2.loss_iou": 1.07166, "d3.loss_cls": 1.42324, "d3.loss_bbox": 0.927, "d3.loss_iou": 1.05909, "d4.loss_cls": 1.43761, "d4.loss_bbox": 0.9296, "d4.loss_iou": 1.05387, "loss": 20.52011, "grad_norm": 82.69637, "time": 0.5336}
